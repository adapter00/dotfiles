[[plugins]]
# deoplete
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
# neosnippet
repo = 'Shougo/neosnippet.vim'
hook_source = '''
  "Ctrl+Kにターゲットジャンプ割当
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = 'snippet'
depends = ['neosnippet-snippets']


# vim8でdeopleteを使うのに必要
[[plugins]]
repo = 'roxma/nvim-yarp'
on_ft = 'ruby'

# vim8でdeopleteを使うのに必要
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_ft = 'ruby'

# for toml file

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# vim8でdeopleteを使うのに必要
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_ft = 'ruby'


[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = 'go'
depends = ['deoplete.nvim']
hook_source = '''
    let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
    let g:deoplete#sources#go#align_class = 1
    let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
    let g:deoplete#auto_complete_delay = 0
    let g:go_highlight_types = 1
    let g:deoplete#sources#go#package_dot = 1
    let g:go_highlight_fields = 1
    let g:go_highlight_variable_declarations = 1
    let g:go_highlight_variable_assignments = 1
'''
[[plugins]]
repo = 'sebdah/vim-delve'
on_ft = 'go'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
on_ft = 'go'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'


[[plugins]]
repo = 'szw/vim-tags'
on_ft = 'ruby'
